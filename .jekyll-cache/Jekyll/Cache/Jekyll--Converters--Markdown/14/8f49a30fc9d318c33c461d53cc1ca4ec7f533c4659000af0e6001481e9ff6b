I"<blockquote>
  <p>Originally posted on Code Mentor: https://www.codementor.io/ryan286/git-alias-merge-conflicts-dmkcw8r3p</p>
</blockquote>

<p>Like many engineers, I spend a lot of time working with <code class="language-plaintext highlighter-rouge">git</code>. It’s an incredibly powerful tool with more options than most people ever need. If you work in the CLI like I do, you’ve probably added a few aliases to help make you more productive. Today, I added a new one to list merge conflicts.</p>

<!--more-->

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[alias]
    conflicts = "!f() { git status -s | grep ^UU | cut -d ' ' -f 2; }; f"
</code></pre></div></div>

<p>This will give you something like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>❯ git conflicts
package.json
src/file.js
src/another.js
</code></pre></div></div>

<p>The value for me is piping it into <code class="language-plaintext highlighter-rouge">git diff</code> to show only the merge conflicts:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git conflicts | git diff --
</code></pre></div></div>

<p>Or opening all the conflicting files in Sublime to reconcile the changes.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sublime $(git conflicts)
</code></pre></div></div>

<blockquote>
  <p>If you don’t have a link set up for Sublime, check out Ashley Nolan’s <a href="https://ashleynolan.co.uk/blog/launching-sublime-from-the-terminal">post on setting it up</a>.</p>
</blockquote>

<p><em>That’s it! Do you know a better way to solve this problem? What other git aliases do you use?</em></p>
:ET