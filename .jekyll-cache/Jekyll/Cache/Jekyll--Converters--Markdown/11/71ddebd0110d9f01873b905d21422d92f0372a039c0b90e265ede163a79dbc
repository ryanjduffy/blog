I"¾<p><p>The flexible box controls and layouts in Enyo are really just convenience wrappers around the standard CSS3 flexible box model.Â  If you haven't looked into the CSS method before, I suggest you take a few moments to look into it.Â  <a href="http://ajaxian.com/archives/css-3-flexible-box-model">Ajaxian has a post</a> that gives you a quick intro; Html5 Rocks has <a href="http://www.html5rocks.com/en/tutorials/flexbox/quick/">another good one</a>.Â  W3C also has the <a href="http://www.w3.org/TR/css3-flexbox/">draft spec</a> for perusal; there's also an <a href="http://www.w3.org/TR/2009/WD-css3-flexbox-20090723/">earlier draft</a> that appears to match WebKit's implementation a little more closely.</p>
[[MORE]]
<p>There are two ways in Enyo to implement a flexible layout:Â  FlexBox and FlexLayout.Â  You could also code the CSS yourself which is completely legal so I suppose there are 3 ways ... but let's pretend you don't want to do that right now.Â  The key difference between the Box and the Layout is that the former is a Control and the latter a Component.Â  This means that HFlexBox and VFlexBox are renderable DOM nodes whereas HFlexLayout and VFlexLayout are not.</p>
<p>In reality, all of the relevant code is provided by the Layout components.Â  The HFlexBox and VFlexBox are simply Controls with layoutKind set to their appropriate layout.Â  I've found that I use the FlexBoxes when I just need a generic control to layout child controls and the FlexLayouts when I'm using a more complex kind.</p>
<p>One key difference between the "usual" implementation of the flexible box model and enyo's is how it handles the flexed components.Â  Normally, a node that is flexed will be given its natural space and its portion of the remaining.Â  In enyo, it only receives the left over space.Â  It accomplishes this by setting the width of the node to 0px as an inline style.Â  Here's the comment from FlexLayout:</p>
<blockquote>
<p>// we redefine flex to mean 'be exactly the left over space'<br />// as opposed to 'natural size plus the left over space'</p>
</blockquote>
<p>The result of this is that some components might be forced to overlap if the remaining space isn't sufficient to hold them.Â  Here's a quick example:</p>
<blockquote>
<p>var _Example = {<br />Â Â Â  name:"com.technisode.example.App",<br />Â Â Â  kind:"Control",<br />Â Â Â  components:[<br />Â Â Â  Â Â Â  {kind:"HFlexBox", components:[<br />Â Â Â  Â Â Â  Â Â Â  {flex:1, components:[<br />Â Â Â  Â Â Â  Â Â Â  Â Â Â  // on a 1024x768 screen, this button will be overlapped<br />Â Â Â  Â Â Â  Â Â Â  Â Â Â  // by the next one because it only gets the<br />Â Â Â  Â Â Â  Â Â Â  Â Â Â  // remaining space<br />Â Â Â  Â Â Â  Â Â Â  Â Â Â  {kind:"Button", width:"500px"}<br />Â Â Â  Â Â Â  Â Â Â  ]},<br />Â Â Â  Â Â Â  Â Â Â  {kind:"Button", width:"300px"},<br />Â Â Â  Â Â Â  Â Â Â  {kind:"Button", width:"300px"}<br />Â Â Â  Â Â Â  ]}<br />Â Â Â  ]<br />};<br /><br />enyo.kind(_Example);</p>
</blockquote></p>
:ET