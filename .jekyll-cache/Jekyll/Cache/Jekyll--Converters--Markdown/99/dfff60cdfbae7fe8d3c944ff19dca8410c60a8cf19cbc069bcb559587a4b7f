I"´<p><p>Today's been an interesting day for webOS.Â  If you're a webOS developer (which is probably a safe assumption if you're reading this), you're probably already aware of HP's decision to jettison its hardware division.Â  As a result, there are in effect no webOS phones or tablets to be released unless they find a suitable hardware partner.Â  According to the fine folks over at <a href="http://thisismynext.com/2011/08/18/hp-not-walking-away-webos-exclusive-details/" target="_blank">This Is My Next</a>, HP isn't walking away from webOS.Â  For now, I'll buy into that and continue to create things for a platform I believe deserves to thrive.</p>
<p>That said, I've taken time off from posting due to the birth of my daughter (our third child).Â  As a result, I haven't taken much time to plan out the next couple posts.Â  But, I wanted to get something out today so I'll cover how to get started with the HTML5 canvas tag in enyo.</p>
[[MORE]]
<p>Enyo doesn't provide much for developing in canvas; it doesn't really need to.Â  Canvas in enyo is the same as in normal web development.Â  There are a couple minor hurdles you have to overcome, however.</p>
<p>First, how do you create a &lt;canvas&gt; tag when all enyo controls are defined in JavaScript?Â  The undocumented nodeTag property, of course!Â  DomNode includes this property and uses it to determine the string to pass to document.createElement.Â  So, to create an enyo canvas control, set the nodeTag property to "canvas"!</p>
<blockquote>
<p>{name:"myCanvasTag", nodeTag:"canvas"}</p>
</blockquote>
<p>Second, how do you get a reference to the drawing context to draw on the canvas.Â  Like other enyo controls, the DOM node doesn't exist until the control is rendered.Â  The simplest solution is to override rendered() in the control containing the canvas and call your drawing methods there.</p>
<blockquote>
<p>rendered:function() {<br />Â Â Â  var n = this.$.myCanvasTag.hasNode();<br />Â Â Â  var ctx = n.getContext("2d");<br />Â Â Â  ctx.fillRect(0,0,100,100);<br />}</p>
</blockquote>
<p>Here's a complete example that creates 5 canvas tags using VirtualRepeater.</p>
<blockquote>
<p>var _App = {<br />Â Â Â  name:"com.technisode.example.App",<br />Â Â Â  kind:"Control",<br />Â Â Â  components:[<br />Â Â Â  Â Â Â  {name: "repeater", kind:"VirtualRepeater", onSetupRow:"setupRow", components:[<br />Â Â Â  Â Â Â  Â Â Â  {name: "canvas", nodeTag:"canvas"}<br />Â Â Â  Â Â Â  ]}<br />Â Â Â  ],<br />Â Â Â  rendered:function() {<br />Â Â Â  Â Â Â  this.inherited(arguments);<br />Â Â Â  Â Â Â  <br />Â Â Â  Â Â Â  for(var i=0;i&lt;5;i++) {<br />Â Â Â  Â Â Â  Â Â Â  // this is a protected method so ... palm may not like you using it ...<br />Â Â Â  Â Â Â  Â Â Â  this.$.repeater.prepareRow(i);<br />Â Â Â  Â Â Â  Â Â Â  var n = this.$.canvas.hasNode();<br />Â Â Â Â Â Â Â Â Â Â Â  n.width = 150;<br />Â Â Â Â Â Â Â Â Â Â Â  n.height = 150;<br />Â Â Â Â Â Â Â Â Â Â Â  n.getContext("2d").strokeText("I am item " + i, 10, 10);<br />Â Â Â  Â Â Â  }<br />Â Â Â  },<br />Â Â Â  setupRow:function(source, index) {<br />Â Â Â  Â Â Â  if(index &lt; 5) {<br />Â Â Â  Â Â Â  Â Â Â  return true;<br />Â Â Â  Â Â Â  }<br />Â Â Â  }<br />}<br /><br />enyo.kind(_App);</p>
</blockquote></p>
:ET