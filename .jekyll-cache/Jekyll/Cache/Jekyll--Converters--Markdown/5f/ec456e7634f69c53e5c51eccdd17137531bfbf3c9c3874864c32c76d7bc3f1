I")<p><p>I started this post by looking through the API docs for a control I hadn't used yet.  I came across the Grid control with no documentation and thought to myself, "This could be interesting."  Turns out, not that interesting.  That did lead me to something else however:  an animated grid layout.</p>
<p>[[MORE]]The Grid control uses simple CSS floats to align its children to a grid.  Each child is assigned the enyo-grid-div class which defines the height and width in pixels (64x48 to be exact).  You can add a custom class (to change the dimensions, for example) to each automatically by specifying a cellClass property on the Grid component.  That's about it.  Oh, you also get a drop shadow ...</p>
<p>I created something a little more robust.  I'll emphasize little as I haven't tried to consider the various use cases yet.  In short, the extras.Grid control publishes height and width properties that define the size of a cell and absolutely positions each child according to that grid.  I added a quick css transition to animate changes to grid size and voilá.  For a little icing, I also added a collapsed property that when set to true, will collapse all the controls to the top left corner.  So, if you wanted to implement an iOS-style photo stack, you could use this as a starting point.</p>
<p>I'm going to flesh this out a bit more and will soon add it to my <a href="http://github.com/tiqtech/enyo-extras" target="_blank">enyo extras github repo</a>.  In the mean time, here's the prototype to try out:</p>
<p><strong>CSS</strong></p>
<blockquote>.extras-grid {<br />  position:relative<br />}<br />.extras-grid &gt; * {<br />  position:absolute;<br />  -webkit-transition:all 250ms ease-out;<br />}</blockquote>
<p><strong>JavaScript</strong></p>
<blockquote>
<p>var _Grid = {<br />    name:"extras.Grid",<br />    kind:"Control",<br />    className:"extras-grid",<br />    published:{<br />        height:200,<br />        width:150,<br /><br />        collapsed:false<br />    },<br />    create:function() {<br />        this.inherited(arguments);<br />        this.resizeHandler();<br />    },<br />    rendered:function() {<br />        this.inherited(arguments);<br />        if(!this.dim) {<br />            this.resizeHandler();<br />        }<br />    },<br />    // iterates children and repositions them<br />    positionControls:function() {<br />        var c = this.getControls();<br />        for(var i=0;i&lt;c.length;i++) {<br />            this.positionControl(c[i], i);<br />        }<br />    },<br />    // calculates position for a control and applies the style<br />    positionControl:function(control, index) {<br />        var colsPerRow = Math.floor(this.dim.width/this.width)<br />        var top = (this.collapsed) ? 0 : Math.floor(index/colsPerRow)*this.height;<br />        var left = (this.collapsed) ? 0 : (index%colsPerRow)*this.width;<br />        control.applyStyle("top", top + "px");<br />        control.applyStyle("left", left + "px");<br />    },<br />    collapsedChanged:function() {<br />        this.positionControls();<br />    },<br />    widthChanged:function() {<br />        this.positionControls();<br />    },<br />    heightChanged:function() {<br />        this.positionControls();<br />    },<br />    // reflows controls when window.resize event fires (e.g. device rotation)<br />    resizeHandler:function() {<br />        var n = this.hasNode();<br />        if(!n) return;<br /><br />        var s = enyo.dom.getComputedStyle(n);<br />        this.dim = {width:parseInt(s.width),height:parseInt(s.height)};<br />        this.positionControls();<br />    }<br />}<br /><br />enyo.kind(_Grid);<br /><br />var _Example = {<br />    name:"com.technisode.example.App",<br />    kind:"extras.Grid",<br />    cellClass:"button",<br />    components:[{kind:"Button", caption:"Collapse", onclick:"toggle"},<br />                {kind:"Button", caption:"Small Grid", onclick:"smallGrid"},<br />                {kind:"Button", caption:"Big Grid", onclick:"bigGrid"},<br />                {kind:"Button", caption:"Normal Grid", onclick:"reset"},<br />                {kind:"Button", caption:"Button 5", onclick:"toggle"},<br />                {kind:"Button", caption:"Button 6", onclick:"toggle"},<br />                {kind:"Button", caption:"Button 7", onclick:"toggle"},<br />                {kind:"Button", caption:"Button 8", onclick:"toggle"},<br />                {kind:"Button", caption:"Button 9", onclick:"toggle"}],<br />    toggle:function() {<br />        this.setCollapsed(!this.getCollapsed());<br />    },<br />    smallGrid:function() {<br />        this.setWidth(96);<br />        this.setHeight(72);<br />    },<br />    bigGrid:function() {<br />        this.setWidth(320);<br />        this.setHeight(240);<br />    },<br />    reset:function() {<br />        this.setWidth(200);<br />        this.setWidth(150);<br />    }<br />}<br /><br />enyo.kind(_Example);</p>
</blockquote></p>
:ET